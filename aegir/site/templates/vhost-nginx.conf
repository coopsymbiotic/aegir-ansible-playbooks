# {{ aegir_managed }}
server {
  include       fastcgi_params;
  # Block https://httpoxy.org/ attacks.
  fastcgi_param HTTP_PROXY "";
  fastcgi_param MAIN_SITE_NAME {{ inventory_hostname }};
  set $main_site_name "{{ inventory_hostname }}";
  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  listen        *:80;
  listen        [::]:80;
  server_name   {{ inventory_hostname }};
  root          {{ site_root }};
  # Allow access to letsencrypt.org ACME challenges directory.
  location ^~ /.well-known/acme-challenge {
    alias /var/lib/dehydrated/acme-challenges;
    try_files $uri 404;
  }
{% if cert.stat.exists %}
  location / {
    return 301 https://{{ inventory_hostname }}$request_uri;
  }
{% else %}
  {% if site_status|int == 1 %}
  include {{ site_path }}/nginx-custom*.conf;
  include /var/aegir/config/includes/nginx_vhost_common.conf;
  {% else %}
    {{ aegir_site_disabled_message }}
  {% endif %}
{% endif %}
}
{% if cert.stat.exists %}
server {
  include       fastcgi_params;

  # Block https://httpoxy.org/ attacks.
  fastcgi_param HTTP_PROXY "";

  fastcgi_param MAIN_SITE_NAME {{ inventory_hostname }};
  set $main_site_name "{{ inventory_hostname }}";
  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  fastcgi_param HTTPS on;
  listen        *:443 ssl http2;
  listen        [::]:443 ssl http2;
  server_name   {{ inventory_hostname }};
  root          {{ site_root }};

  ssl_certificate_key        /var/lib/dehydrated/certs/{{ inventory_hostname }}/privkey.pem;
  ssl_certificate            /var/lib/dehydrated/certs/{{ inventory_hostname }}/fullchain.pem;
{% if ciphers.stat.exists %}
  include snippets/ciphers.conf;
{% else %}
  ssl_protocols              TLSv1.2 TLSv1.3;
  ssl_ciphers                ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:!aNULL:!eNULL:!LOW:!3DES:!DES:!MD5:!EXP:!PSK:!SRP:!DSS;
  ssl_ecdh_curve             secp384r1;
  ssl_prefer_server_ciphers  on;
{% endif %}

  # Generate using:
  # openssl dhparam -check -5 4096 > /etc/nginx/params.4096
  # (can be re-generated regularly in a cron job)
{% if dhparams.stat.exists %}
  ssl_dhparam /etc/nginx/params.4096;
{% endif %}

  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  keepalive_timeout 70;

  # Allow access to letsencrypt.org ACME challenges directory.
  location ^~ /.well-known/acme-challenge {
    alias /var/lib/dehydrated/acme-challenges;
    try_files $uri 404;
  }

  # Todo: should be in the common vhost file
  location ~ /\.git { return 404; }

{% if site_root == "/var/aegir/admin/web/" or site_root == "/var/aegir/hostmaster/" %}
  location ~ ^/fpm-(status|ping)$ {
    access_log off;
    keepalive_requests 0;
    allow 127.0.0.1;
    allow ::1;
{% for ip in ansible_all_ipv4_addresses %}
    allow {{ ip }};
{% endfor %}
{% for ip in ansible_all_ipv6_addresses %}
    allow {{ ip }};
{% endfor %}
    deny all;
    fastcgi_pass unix:/var/run/php/php-fpm.sock;
  }
  location /inventory {
    keepalive_requests 0;
    allow 127.0.0.1;
    allow ::1;
{% for ip in ansible_all_ipv4_addresses %}
    allow {{ ip }};
{% endfor %}
{% for ip in ansible_all_ipv6_addresses %}
    allow {{ ip }};
{% endfor %}
    deny all;
    try_files $uri @drupal;
  }
{% endif %}
{% if site_status|int == 1 %}
  {% if software == "WordPress" %}

  fastcgi_param wp_content_dir {{ site_path }}/wp-content;
  fastcgi_param wp_content_url https://{{ inventory_hostname }}/sites/{{ inventory_hostname }}/wp-content;
  fastcgi_param CIVICRM_SETTINGS {{ site_path }}/wp-content/uploads/civicrm/civicrm.settings.php;
  ###
  ### Allow some known php files.
  ###
  location ~ /wp-admin/$ {
    tcp_nopush   off;
    keepalive_requests 0;
    access_log /var/log/nginx/access.log main;
    if ($is_bot) {
      return 403;
    }
    try_files    /wp-admin/index.php =404;
    # FIXME @todo
    fastcgi_pass unix:/var/run/php/php-fpm.sock;
  }
  location ~ /wp-admin/(.*).php$ {
    tcp_nopush   off;
    keepalive_requests 0;
    access_log /var/log/nginx/access.log main;
    if ($is_bot) {
      return 403;
    }
    try_files    $uri =404;
    # FIXME @todo
    fastcgi_pass unix:/var/run/php/php-fpm.sock;
  }
  location ~ /wp-(.*).php$ {
    tcp_nopush   off;
    keepalive_requests 0;
    access_log /var/log/nginx/access.log main;
    if ($is_bot) {
      return 403;
    }
    try_files    $uri =404;
    # FIXME @todo
    fastcgi_pass unix:/var/run/php/php-fpm.sock;
  }
  location ~ ^/wp-content/(.*)$ {
    try_files /sites/$main_site_name/wp-content/$1 =404;
  }
  # Deprecated endpoint, use civicrm/ajax/rest
  location ~ ^/sites/{{ inventory_hostname }}/wp-content/plugins/civicrm/civicrm/extern/(.*).php$ {
    tcp_nopush   off;
    keepalive_requests 0;
    access_log /var/log/nginx/access.log main;
    if ($is_bot) {
      return 403;
    }
    try_files    $uri =404;
    fastcgi_pass unix:/var/run/php/php-fpm.sock;
  }
  location ~* ^/sites/.*/wp-content/uploads/civicrm/(?:ConfigAndLog|custom|upload|templates_c) {
    access_log off;
    return 404;
  }
  {% endif %}

  include {{ site_path }}/nginx-custom*.conf;
  include /var/aegir/config/includes/nginx_vhost_common.conf;
{% else %}
  {{ aegir_site_disabled_message }}
{% endif %}
}
{% endif %}
{% if aliases | length > 0 %}
# Redirections
server {
  listen        *:80;
  listen        [::]:80;
  server_name   {% for alias in aliases %} {{ alias }}{% endfor %};
  root          {{ site_root }};
  # Allow access to letsencrypt.org ACME challenges directory.
  location ^~ /.well-known/acme-challenge {
    alias /var/lib/dehydrated/acme-challenges;
    try_files $uri 404;
  }
  location / {
    return 301 https://{{ inventory_hostname }}$request_uri;
  }
}
{% if cert.stat.exists %}
server {
  fastcgi_param HTTPS on;
  listen        *:443 ssl http2;
  listen        [::]:443 ssl http2;
  server_name   {% for alias in aliases %} {{ alias }}{% endfor %};
  root          {{ site_root }};

  ssl_certificate_key        /var/lib/dehydrated/certs/{{ inventory_hostname }}/privkey.pem;
  ssl_certificate            /var/lib/dehydrated/certs/{{ inventory_hostname }}/fullchain.pem;
{% if ciphers.stat.exists %}
  include snippets/ciphers.conf;
{% else %}
  ssl_protocols              TLSv1.2 TLSv1.3;
  ssl_ciphers                ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES128-SHA:!aNULL:!eNULL:!LOW:!3DES:!DES:!MD5:!EXP:!PSK:!SRP:!DSS;
  ssl_ecdh_curve             secp384r1;
  ssl_prefer_server_ciphers  on;
{% endif %}

  # Generate using:
  # openssl dhparam -check -5 4096 > /etc/nginx/params.4096
  # (can be re-generated regularly in a cron job)
{% if dhparams.stat.exists %}
  ssl_dhparam /etc/nginx/params.4096;
{% endif %}

  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  keepalive_timeout 70;

  # Allow access to letsencrypt.org ACME challenges directory.
  location ^~ /.well-known/acme-challenge {
    alias /var/lib/dehydrated/acme-challenges;
    try_files $uri 404;
  }
  location / {
    return 301 https://{{ inventory_hostname }}$request_uri;
  }
}
{% endif %}
{% endif %}
