---

- hosts: all
  tasks:
    # Ignore the directory permissions for now, we only change it when necessary
    - name: Create the site directory
      file:
        path: "{{ site_path }}"
        state: directory
        owner: aegir
        group: www-data

    # todo: move to separate include
    - name: Create the MySQL database on remote server
      mysql_db:
        name: "{{ db_name }}"
        state: present
        login_user: "{{ hostvars[db_host]['db']['db_user'] }}"
        login_password: "{{ hostvars[db_host]['db']['db_passwd'] }}"
        login_host: "{{ db_host }}"
      when: db_host != "localhost"

    - name: Create the MySQL database on localhost
      mysql_db:
        name: "{{ db_name }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
      when: db_host == "localhost"

    - name: Create the MySQL user on remote server
      mysql_user:
        name: "{{ db_name }}"
        password: "{{ db_passwd }}"
        priv:
          '{{ db_name }}.*:ALL'
        column_case_sensitive: true
        state: present
        login_user: "{{ hostvars[db_host]['db']['db_user'] }}"
        login_password: "{{ hostvars[db_host]['db']['db_passwd'] }}"
        login_host: "{{ db_host }}"
      when: db_host != "localhost"

    - name: Create the MySQL user on localhost
      mysql_user:
        name: "{{ db_name }}"
        password: "{{ db_passwd }}"
        priv:
          '{{ db_name }}.*:ALL'
        column_case_sensitive: true
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
      when: db_host == "localhost"

    - name: Test if a database.sql file already exists (clone or remote-import)
      stat:
        path: "{{ site_path }}/database.sql"
      register: sqldump

    - name: Update CMS-specific settings
      include_tasks: "verify/{{ software }}/settings.yml"
      when: sqldump.stat.exists

    - name: Import the SQL dump
      include_tasks: "restore/sql.yml"
      when: sqldump.stat.exists

    - name: Run CMS-specific installation tasks
      include_tasks: "install/{{ software }}.yml"
      when: not sqldump.stat.exists

    - name: Run provision-enable
      shell:
        chdir: "/var/aegir/admin/web"
        cmd: "/usr/local/bin/bee hosting-site-task {{ inventory_hostname }} enable"
      # @todo 'bee' does not return errors, validate output
      # failed_when: "'^\\d+' not in result.stdout"
